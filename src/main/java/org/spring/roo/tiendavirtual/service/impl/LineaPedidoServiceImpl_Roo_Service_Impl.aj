// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.spring.roo.tiendavirtual.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.spring.roo.tiendavirtual.domain.LineaPedido;
import org.spring.roo.tiendavirtual.domain.Pedido;
import org.spring.roo.tiendavirtual.domain.Producto;
import org.spring.roo.tiendavirtual.repository.LineaPedidoRepository;
import org.spring.roo.tiendavirtual.service.impl.LineaPedidoServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect LineaPedidoServiceImpl_Roo_Service_Impl {
    
    declare @type: LineaPedidoServiceImpl: @Service;
    
    declare @type: LineaPedidoServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LineaPedidoRepository LineaPedidoServiceImpl.lineaPedidoRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param lineaPedidoRepository
     */
    @Autowired
    public LineaPedidoServiceImpl.new(LineaPedidoRepository lineaPedidoRepository) {
        setLineaPedidoRepository(lineaPedidoRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return LineaPedidoRepository
     */
    public LineaPedidoRepository LineaPedidoServiceImpl.getLineaPedidoRepository() {
        return lineaPedidoRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lineaPedidoRepository
     */
    public void LineaPedidoServiceImpl.setLineaPedidoRepository(LineaPedidoRepository lineaPedidoRepository) {
        this.lineaPedidoRepository = lineaPedidoRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lineapedido
     * @return Map
     */
    public Map<String, List<MessageI18n>> LineaPedidoServiceImpl.validate(LineaPedido lineapedido) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lineaPedido
     */
    @Transactional
    public void LineaPedidoServiceImpl.delete(LineaPedido lineaPedido) {
        // Clear bidirectional many-to-one child relationship with Pedido
        if (lineaPedido.getPedido() != null) {
            lineaPedido.getPedido().getLineasPedido().remove(lineaPedido);
        }
        
        // Clear bidirectional many-to-one child relationship with Producto
        if (lineaPedido.getProducto() != null) {
            lineaPedido.getProducto().getLineasPedido().remove(lineaPedido);
        }
        
        getLineaPedidoRepository().delete(lineaPedido);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<LineaPedido> LineaPedidoServiceImpl.save(Iterable<LineaPedido> entities) {
        return getLineaPedidoRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void LineaPedidoServiceImpl.delete(Iterable<Long> ids) {
        List<LineaPedido> toDelete = getLineaPedidoRepository().findAll(ids);
        getLineaPedidoRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return LineaPedido
     */
    @Transactional
    public LineaPedido LineaPedidoServiceImpl.save(LineaPedido entity) {
        return getLineaPedidoRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return LineaPedido
     */
    public LineaPedido LineaPedidoServiceImpl.findOne(Long id) {
        return getLineaPedidoRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return LineaPedido
     */
    public LineaPedido LineaPedidoServiceImpl.findOneForUpdate(Long id) {
        return getLineaPedidoRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<LineaPedido> LineaPedidoServiceImpl.findAll(Iterable<Long> ids) {
        return getLineaPedidoRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<LineaPedido> LineaPedidoServiceImpl.findAll() {
        return getLineaPedidoRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long LineaPedidoServiceImpl.count() {
        return getLineaPedidoRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<LineaPedido> LineaPedidoServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getLineaPedidoRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<LineaPedido> LineaPedidoServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getLineaPedidoRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pedido
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<LineaPedido> LineaPedidoServiceImpl.findByPedido(Pedido pedido, GlobalSearch globalSearch, Pageable pageable) {
        return getLineaPedidoRepository().findByPedido(pedido, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<LineaPedido> LineaPedidoServiceImpl.findByProducto(Producto producto, GlobalSearch globalSearch, Pageable pageable) {
        return getLineaPedidoRepository().findByProducto(producto, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pedido
     * @return Long
     */
    public long LineaPedidoServiceImpl.countByPedido(Pedido pedido) {
        return getLineaPedidoRepository().countByPedido(pedido);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @return Long
     */
    public long LineaPedidoServiceImpl.countByProducto(Producto producto) {
        return getLineaPedidoRepository().countByProducto(producto);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<LineaPedido> LineaPedidoServiceImpl.getEntityType() {
        return LineaPedido.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> LineaPedidoServiceImpl.getIdType() {
        return Long.class;
    }
    
}
