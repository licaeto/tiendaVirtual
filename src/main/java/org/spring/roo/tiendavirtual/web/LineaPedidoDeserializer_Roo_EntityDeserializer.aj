// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.spring.roo.tiendavirtual.web;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.spring.roo.tiendavirtual.domain.LineaPedido;
import org.spring.roo.tiendavirtual.service.api.LineaPedidoService;
import org.spring.roo.tiendavirtual.web.LineaPedidoDeserializer;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect LineaPedidoDeserializer_Roo_EntityDeserializer {
    
    declare @type: LineaPedidoDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return LineaPedidoService
     */
    public LineaPedidoService LineaPedidoDeserializer.getLineaPedidoService() {
        return lineaPedidoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lineaPedidoService
     */
    public void LineaPedidoDeserializer.setLineaPedidoService(LineaPedidoService lineaPedidoService) {
        this.lineaPedidoService = lineaPedidoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService LineaPedidoDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void LineaPedidoDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return LineaPedido
     * @throws IOException
     */
    public LineaPedido LineaPedidoDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        LineaPedido lineaPedido = lineaPedidoService.findOne(id);
        if (lineaPedido == null) {
            throw new NotFoundException("LineaPedido not found");
        }
        return lineaPedido;
    }
    
}
