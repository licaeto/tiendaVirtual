// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.spring.roo.tiendavirtual.domain;

import java.util.Date;
import java.util.Objects;
import java.util.Set;
import org.spring.roo.tiendavirtual.domain.LineaPedido;
import org.spring.roo.tiendavirtual.domain.Producto;
import org.spring.roo.tiendavirtual.domain.enumerated.Detalles;

privileged aspect Producto_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Producto.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return Producto
     */
    public Producto Producto.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Producto.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return Producto
     */
    public Producto Producto.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets nombre value
     * 
     * @return String
     */
    public String Producto.getNombre() {
        return this.nombre;
    }
    
    /**
     * Sets nombre value
     * 
     * @param nombre
     * @return Producto
     */
    public Producto Producto.setNombre(String nombre) {
        this.nombre = nombre;
        return this;
    }
    
    /**
     * Gets descripcion value
     * 
     * @return String
     */
    public String Producto.getDescripcion() {
        return this.descripcion;
    }
    
    /**
     * Sets descripcion value
     * 
     * @param descripcion
     * @return Producto
     */
    public Producto Producto.setDescripcion(String descripcion) {
        this.descripcion = descripcion;
        return this;
    }
    
    /**
     * Gets detalles value
     * 
     * @return Detalles
     */
    public Detalles Producto.getDetalles() {
        return this.detalles;
    }
    
    /**
     * Sets detalles value
     * 
     * @param detalles
     * @return Producto
     */
    public Producto Producto.setDetalles(Detalles detalles) {
        this.detalles = detalles;
        return this;
    }
    
    /**
     * Gets inicio value
     * 
     * @return Date
     */
    public Date Producto.getInicio() {
        return this.inicio;
    }
    
    /**
     * Sets inicio value
     * 
     * @param inicio
     * @return Producto
     */
    public Producto Producto.setInicio(Date inicio) {
        this.inicio = inicio;
        return this;
    }
    
    /**
     * Gets fin value
     * 
     * @return Date
     */
    public Date Producto.getFin() {
        return this.fin;
    }
    
    /**
     * Sets fin value
     * 
     * @param fin
     * @return Producto
     */
    public Producto Producto.setFin(Date fin) {
        this.fin = fin;
        return this;
    }
    
    /**
     * Gets precio value
     * 
     * @return Float
     */
    public Float Producto.getPrecio() {
        return this.precio;
    }
    
    /**
     * Sets precio value
     * 
     * @param precio
     * @return Producto
     */
    public Producto Producto.setPrecio(Float precio) {
        this.precio = precio;
        return this;
    }
    
    /**
     * Gets lineasPedido value
     * 
     * @return Set
     */
    public Set<LineaPedido> Producto.getLineasPedido() {
        return this.lineasPedido;
    }
    
    /**
     * Sets lineasPedido value
     * 
     * @param lineasPedido
     * @return Producto
     */
    public Producto Producto.setLineasPedido(Set<LineaPedido> lineasPedido) {
        this.lineasPedido = lineasPedido;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Producto.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Producto)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Producto) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Producto.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Producto.toString() {
        return "Producto {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", nombre='" + nombre + '\'' + 
                ", descripcion='" + descripcion + '\'' + 
                ", inicio='" + inicio == null ? null : java.text.DateFormat.getDateTimeInstance().format(inicio) + '\'' + 
                ", fin='" + fin == null ? null : java.text.DateFormat.getDateTimeInstance().format(fin) + '\'' + 
                ", precio='" + precio + '\'' + "}" + super.toString();
    }
    
}
